// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    //The logic that selects between the counterâ€™s inc, load, and reset modes can be implemented using some of the multiplexers built in project 1.

    // reset == 2 the next out is 0
    Mux(a=true, b=false, sel=reset, out=ifreset);
    Not(in=ifreset, out=resetsel); 
    Mux16(a=in, b=false, sel=resetsel, out=firstout);

    // load
    Mux(a=ifreset, b=false, sel=load, out=ifload);
    And(a=ifreset, b=load, out=lload);// if ifreset and load both equal true //next one is in

    // increase == 1 the next out is in + 1
    Mux(a=ifload, b=false, sel=inc, out=ifinc);
    And(a=ifload, b=inc, out=isel); //if isel == 1 means need increase
    Inc16(in=rout, out=incout);
    Mux16(a=firstout, b=incout, sel=isel, out=thirdout);

    Or(a=resetsel, b=lload, out=rl);
    Or(a=rl, b=isel, out=tload);

    // load=0 out(t+1)=out(t)
    Register(in=thirdout, load=tload, out=rout,out=out);

}
