// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

 /**
 if load == 1:
    memory(in, address)
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // 2^14 = 1 means using screen or keyboard if 14th and 13th both equal 1 means use keyoard
    And(a=address[14], b=address[13], out=isk);

    // if address = 0 then output is true
    Mux(a=true, b=false, sel=address[14], out=ramload);
    // if isk == 0 then output is true
    Mux(a=address[14], b=false, sel=isk, out=screenload);

    // which load
    And(a=load, b=ramload, out=rload);
    And(a=load, b=screenload, out=sload);

    // select output
    Mux16(a=rout, b=sout, sel=address[14], out=rs);
    Mux16(a=rs, b=kout, sel=isk, out=out);


    Keyboard(out=kout);
    RAM16K(in=in, load=rload, address=address[0..13], out=rout);
    Screen(in=in, load=sload, address=address[0..12], out=sout);
}
